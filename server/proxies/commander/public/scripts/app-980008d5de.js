/**
 * Application configuration
 */
!function(){"use strict";angular.module("myApp",["ngMessages","ui.router","restangular","ui.bootstrap"])}(),function(){"use strict";function n(n){n.setBaseUrl("/api")}angular.module("myApp").config(n),n.$inject=["RestangularProvider"]}(),function(){"use strict";function n(n){n.otherwise(function(n){var t=n.get("$state");t.go("home.instances")})}angular.module("myApp").config(n),n.$inject=["$urlRouterProvider"]}(),function(){"use strict";function n(n,t,e,s,a,i,o){t.$on("$destroy",function(){s.stop(),i.stop(),e.stop()}),e.start(a.getToken()).then(function(){o.success("GUI is connected.")})["catch"](function(t){n.error(t),o.error("Cannot connect to daemon.<br/>Please reload GUI.")}),i.getScaling(),s.getAllInstances()}angular.module("myApp").controller("HomeController",n),n.$inject=["$log","$scope","EventsService","InstancesCacheService","LoginService","ScalingCacheService","ToastService"]}(),function(){"use strict";function n(n){n.state("home",{"abstract":!0,url:"",data:{requireAuth:!0},templateUrl:"app/home/home.html",controller:"HomeController as vm"})}angular.module("myApp").config(n),n.$inject=["$stateProvider"]}(),function(){"use strict";function n(n,t,e){function s(){t.login(a.password).then(function(){n.go("home.instances")})["catch"](function(){e.error("Invalid password")})}var a=this;a.login=s,a.password=""}angular.module("myApp").controller("LoginController",n),n.$inject=["$state","LoginService","ToastService"]}(),function(){"use strict";function n(n){n.state("login",{url:"/login",data:{requireAuth:!1},templateUrl:"app/login/login.html",controller:"LoginController as vm"})}angular.module("myApp").config(n),n.$inject=["$stateProvider"]}(),function(){"use strict";function n(n){function t(t){return n(function(n,e){if(!t||t.length<=0)return e("Password is empty");var s=btoa(t);localStorage.setItem("token",s),n()})}function e(){try{return localStorage.getItem("token")}catch(n){return}}function s(){try{localStorage.removeItem("token")}catch(t){}finally{return n.resolve()}}var a={login:t,logout:s,getToken:e};return a}angular.module("myApp").factory("LoginService",n),n.$inject=["$q"]}(),function(){"use strict";function n(n,t){function e(e){return n(function(n,s){window.io||s(new Error("Cannot find socket.io"));try{a=io.connect("",{path:"/socket.io",query:"token="+e,"force new connection":!0}),a.on("event",function(n){n=JSON.parse(n),t.$apply(function(){t.$emit(n.event,n.payload)})}),n()}catch(i){s(i)}})}function s(){a.disconnect()}var a,i={start:e,stop:s};return i}angular.module("myApp").factory("EventsService",n),n.$inject=["$q","$rootScope"]}(),function(n){"use strict";function t(n){switch(n){case"started":return"icon-started";case"stopped":return"icon-stopped";case"starting":return"icon-starting";case"stopping":return"icon-stopping";default:return"icon-unknown"}}function e(n){return n?"icon-alive":"icon-dead"}function s(n){switch(n){case"awsec2":return"icon-aws-ec2";default:return"icon-unknown"}}n.iconsHelper=(n.module||{}).exports={getStatus:t,isAlive:e,getCloudType:s}}(this),function(){"use strict";function n(n,t,e,s,a){function i(){function i(n,e){function s(n,t){var e=["Instance "+t.name+" updated."];return n.status!==t.status&&e.push('<i class="icon '+iconsHelper.getStatus(n.status)+'"></i> to <i class="icon '+iconsHelper.getStatus(t.status)+'"></i>'),n.alive!==t.alive&&e.push('<i class="icon '+iconsHelper.isAlive(n.alive)+'"></i> to <i class="icon '+iconsHelper.isAlive(t.alive)+'"></i>'),e.join("<br/>\n")}var i=_.findIndex(l,{content:{name:e.name}});if(i>=0)if("removed"===e.status)l.splice(i,1),a.success("Instance "+e.name+" removed.");else{var o=s(l[i].content,e);l[i].content=e,o&&a.success(o)}else if("removed"!==e.status){var c={content:e};l.push(c),a.success("Instance "+e.name+" created.")}else t.info("Unknown instance "+e.name+" removed.")}return l?n.when(l):r?r:r=s.getAllInstances().then(function(n){return l=n.map(function(n){return{content:n}}),u=e.$on("status:updated",i),d=e.$on("alive:updated",i),l})}function o(){u&&(u(),u=void 0),d&&(d(),d=void 0),l=void 0,r=void 0}function c(n){return s.deleteInstance(n)}var l,r,u,d,v={stop:o,getAllInstances:i,deleteInstance:c};return v}angular.module("myApp").factory("InstancesCacheService",n),n.$inject=["$q","$log","$rootScope","InstancesService","ToastService"]}(),function(){"use strict";function n(n){function t(){return s.getList()}function e(n){var t={name:n};return s.all("stop").post(t)}var s=n.all("instances"),a={getAllInstances:t,deleteInstance:e};return a}angular.module("myApp").factory("InstancesService",n),n.$inject=["Restangular"]}(),function(){"use strict";function n(n,t,e,s){function a(){function a(n,t){_.merge(c,t),s.success("Scaling updated.")}return c?n.when(c):l?l:l=e.getScaling().then(function(n){return c=n,r=t.$on("scaling:updated",a),c})}function i(){r&&(r(),r=void 0),c=void 0,l=void 0}function o(n){return e.updateScaling(n)}var c,l,r,u={stop:i,getScaling:a,updateScaling:o};return u}angular.module("myApp").factory("ScalingCacheService",n),n.$inject=["$q","$rootScope","ScalingService","ToastService"]}(),function(){"use strict";function n(n){function t(){return s.get().then(function(n){return n.plain()})}function e(n){return s.patch(n).then(function(t){return t?t.plain():n})}var s=n.one("scaling"),a={getScaling:t,updateScaling:e};return a}angular.module("myApp").factory("ScalingService",n),n.$inject=["Restangular"]}(),function(){"use strict";function n(n){function t(n){var t={};return n&&(t.retention=n),e.get(t).then(function(n){return n.plain()})}var e=n.one("stats"),s={getAll:t};return s}angular.module("myApp").factory("StatsService",n),n.$inject=["Restangular"]}(),function(){"use strict";function n(){return function(n){return n&&n.hostname?n.hostname:"no IP"}}angular.module("myApp").filter("address",n)}(),function(){"use strict";function n(){function n(n){toastr.success(n)}function t(n){toastr.warning(n)}function e(n){toastr.error(n)}toastr.options={positionClass:"toast-bottom-right"};var s={success:n,warning:t,error:e};return s}angular.module("myApp").factory("ToastService",n)}(),function(n){"use strict";function t(n,t,e,s){this._retention=n,this._maxTick=t,this._samplingTick=Math.floor(this._retention/this._maxTick/1e3),this._avg1=e,this._avg2=s,this._buffer=void 0,this._bufferCount=0,this._items=[]}n.timeWindowHelper=(n.module||{}).exports={TimeWindow:t},t.prototype.add=function(n){n&&(n.ts||(n.ts=(new Date).getTime()),this._buffer?this._bufferCount<this._samplingTick?(this._buffer.label1+=n.label1,this._buffer.label2+=n.label2,++this._bufferCount):(this._avg1&&(this._buffer.label1/=this._bufferCount),this._avg2&&(this._buffer.label2/=this._bufferCount),this._items.push({ts:this._buffer.ts,label1:this._buffer.label1,label2:this._buffer.label2}),this._buffer=n,this._bufferCount=1):(this._buffer=n,this._bufferCount=1),this._refresh())},t.prototype.getItems=function(){return this._refresh(),this._items},t.prototype.clear=function(n){this._retention=n,this._samplingTick=Math.floor(this._retention/this._maxTick/1e3),this._buffer=void 0,this._bufferCount=0,this._items.length=0},t.prototype._refresh=function(){var n=(new Date).getTime()-this._retention;this._items=_.filter(this._items,function(t){return t.ts>n})}}(this),function(){"use strict";function n(){function n(n,t,e,s){function a(n){if(!n||n.length<=0)i.unload({ids:["x",s.columns.label1,s.columns.label2]});else{var t=[["x"],[s.columns.label1],[s.columns.label2]];n.forEach(function(n){t[0].push(moment(n.ts).toDate()),t[1].push(n.label1),t[2].push(n.label2)}),i.load({columns:t})}}t.css("display","block");var i=c3.generate({bindto:t[0],data:{x:"x",columns:[["x"],[s.columns.label1],[s.columns.label2]],axes:{data2:"y2"}},axis:{x:{type:"timeseries",tick:{format:"%H:%M:%S"}},y:{label:{text:s.label1,position:"outer-middle"}},y2:{show:!0,label:{text:s.label2,position:"outer-middle"}}},transition:{duration:0}});n.$watchCollection(function(){return s.data.getItems()},a)}function t(){}var e={restrict:"E",scope:{},bindToController:{columns:"=",data:"="},controller:t,controllerAs:"vm",templateUrl:"app/home/instances/instance/instance.html",link:n};return e}angular.module("myApp").directive("timechart",n)}(),function(){"use strict";function n(n,t,e,s,a){function i(){e.getAllInstances().then(function(n){c.instances=n})["catch"](function(t){n.error(t),a.error("Cannot load instances")}),s.getScaling().then(function(n){c.scaling=n})["catch"](function(t){n.error(t),a.error("Cannot load scaling")})}function o(){var e=t.open({templateUrl:"app/home/instances/scaling/scaling.html",controller:"InstancesScalingController",controllerAs:"vm",animation:!1,resolve:{scaling:function(){return _.cloneDeep(c.scaling)}}});e.result.then(function(t){s.updateScaling(t)["catch"](function(t){n.error(t),a.error("Cannot update scaling: "+t)})})}var c=this;c.instances=[],c.openScalingModal=o,c.scaling={min:0,required:0,max:0},i()}angular.module("myApp").controller("InstancesController",n),n.$inject=["$log","$modal","InstancesCacheService","ScalingCacheService","ToastService"]}(),function(){"use strict";function n(n){n.state("home.instances",{url:"/instances",templateUrl:"app/home/instances/instances.html",controller:"InstancesController as vm"})}angular.module("myApp").config(n),n.$inject=["$stateProvider"]}(),function(){"use strict";function n(){function n(n,t){function e(){t.logout().then(function(){n.go("login")})}var s=this;s.logout=e}var t={restrict:"E",scope:{},bindToController:{},controller:n,controllerAs:"vm",templateUrl:"app/home/navbar/navbar.html"};return n.$inject=["$state","LoginService"],t}angular.module("myApp").directive("navbar",n)}(),function(){"use strict";function n(n,t,e){function s(n){e.getAll(n).then(function(t){o.requests.data.clear(n),o.flow.data.clear(n),t.forEach(a)})}function a(n){o.requests.data&&o.requests.data.add({ts:n.ts,label1:n.rq.count,label2:n.rq.duration}),o.flow.data&&o.flow.data.add({ts:n.ts,label1:i(n.flow.bytes_received),label2:i(n.flow.bytes_sent)}),n.global.kbytes_received=i(n.global.bytes_received),delete n.global.bytes_received,n.global.kbytes_sent=i(n.global.bytes_sent),delete n.global.bytes_received,_.merge(o.global,n.global)}function i(n){return Math.floor(n/1024)}var o=this;o.global={},o.scale=6e4,t.$watch("vm.scale",function(n){s(n)}),o.requests={columns:{label1:"Requests count",label2:"Requests delay (in seconds)"},data:new timeWindowHelper.TimeWindow(o.scale,60,!1,!0)},o.flow={columns:{label1:"KB received",label2:"KB sent"},data:new timeWindowHelper.TimeWindow(o.scale,60,!1,!1)};var c=n.$on("stats",function(n,t){a(t)});t.$on("$destroy",c)}angular.module("myApp").controller("StatsController",n),n.$inject=["$rootScope","$scope","StatsService"]}(),function(){"use strict";function n(n){n.state("home.stats",{url:"/stats",templateUrl:"app/home/stats/stats.html",controller:"StatsController as vm"})}angular.module("myApp").config(n),n.$inject=["$stateProvider"]}(),function(){"use strict";function n(n){function t(n,t){function e(t){var e=n.get("LoginService"),s=e.getToken();return s&&(t.headers.Authorization=s),t}function s(e){if(401===e.status||403===e.status){var s=n.get("LoginService"),a=n.get("$state");s.logout()["finally"](function(){a.go("login")})}return t.reject(e)}var a={request:e,responseError:s};return a}n.interceptors.push(t),t.$inject=["$injector","$q"]}angular.module("myApp").config(n),n.$inject=["$httpProvider"]}(),function(){"use strict";function n(n,t,e){t.$on("$stateChangeStart",function(t,s){if("login"!==s.name){var a=s.data.requireAuth;if(a){var i=e.getToken();i||(t.preventDefault(),n.go("login"))}}})}angular.module("myApp").run(n),n.$inject=["$state","$rootScope","LoginService"]}(),function(){"use strict";function n(){function n(n,t){function e(){n.deleteInstance(s.container.content.name).then(function(){t.success("Remove "+s.container.content.name+" asked.")})["catch"](function(){t.error("Cannot ask to remove "+s.container.content.name)})}var s=this;s.kill=e,s.getCloudType=iconsHelper.getCloudType,s.getStatus=iconsHelper.getStatus,s.isAlive=iconsHelper.isAlive}var t={restrict:"E",scope:{},bindToController:{container:"="},controller:n,controllerAs:"vm",templateUrl:"app/home/instances/instance/instance.html"};return n.$inject=["InstancesCacheService","ToastService"],t}angular.module("myApp").directive("instance",n)}(),function(){"use strict";function n(n,t){function e(){n.close(a.scaling)}function s(){n.dismiss("cancel")}var a=this;a.scaling=t,a.ok=e,a.cancel=s}angular.module("myApp").controller("InstancesScalingController",n),n.$inject=["$modalInstance","scaling"]}(),function(){"use strict";function n(){function n(n,t,e,s){function a(t){return t>=n.scmin}function i(t){return t<=n.scmax}s.$validators.scmin=a,s.$validators.scmax=i,n.$watch("scmin",function(){s.$validate()}),n.$watch("scmax",function(){s.$validate()})}var t={restrict:"A",require:"ngModel",scope:{scmin:"=",scmax:"="},link:n};return t}angular.module("myApp").directive("scalingValidator",n)}(),angular.module("myApp").run(["$templateCache",function(n){n.put("app/home/home.html",'<navbar></navbar><div ui-view=""></div>'),n.put("app/login/login.html",'<div class="login"><div class="container"><div class="row"><div class="col-md-6 col-md-offset-4"><div class="login-logo"><img src="assets/images/logo400.png"></div><div class="panel panel-default"><div class="panel-heading"><h3 class="panel-title">Please sign in</h3></div><div class="panel-body"><form name="myForm" role="form" no-validate="" ng-submit="vm.login()"><fieldset><div class="form-group" ng-class="{\'has-error\': myForm.password.$invalid && myForm.password.$dirty}"><input class="form-control" placeholder="Password" name="password" type="password" ng-model="vm.password" required=""> <span class="help-block" ng-messages="myForm.password.$error" ng-show="myForm.password.$invalid && myForm.password.$dirty"><span ng-message="required">Password is empty</span></span></div><input class="btn btn-lg btn-success btn-block" type="submit" value="Login" ng-disabled="myForm.$invalid"></fieldset></form></div></div></div></div></div></div>'),n.put("app/home/instances/instances.html",'<section class="instances"><div class="container-fluid"><div class="row"><div class="col-xs-12"><div class="panel panel-default"><div class="panel-heading"><div class="panel-title">Instances<div class="instances-scaling pull-right">Min: <span ng-bind="vm.scaling.min"></span> / Required: <span ng-bind="vm.scaling.required"></span> / Max: <span ng-bind="vm.scaling.max"></span> <button class="btn btn-default btn-xs" type="button" ng-click="vm.openScalingModal()">Scaling</button></div></div></div><div class="panel-body"><div class="row"><div class="col-sm-2" ng-repeat="instance in vm.instances track by instance.content.name" ng-show="vm.instances.length > 0"><instance container="instance"></instance></div><div class="col-sm-12 list-empty" ng-show="vm.instances.length <= 0"><i class="icon icon-empty"></i> <span>No instance found</span></div></div></div></div></div></div></div></section>'),n.put("app/home/navbar/navbar.html",'<nav class="navbar navbar-default navbar-fixed-top"><div class="container-fluid"><div class="navbar-header"><button type="button" class="navbar-toggle" ng-init="navCollapsed = true" ng-click="navCollapsed = !navCollapsed"><span class="sr-only">Toggle navigation</span> <span class="icon-bar"></span> <span class="icon-bar"></span> <span class="icon-bar"></span></button><div class="navbar-brand"><img src="assets/images/logo35h.png"></div></div><div class="navbar-collapse" ng-class="{collapse: navCollapsed}"><ul class="nav navbar-nav"><li ui-sref-active="active"><a ui-sref="home.instances">Instances</a></li><li ui-sref-active="active"><a ui-sref="home.stats">Stats</a></li></ul><ul class="nav navbar-nav navbar-right"><li><a ng-click="vm.logout()"><i class="icon icon-sign-out"></i> Logout</a></li></ul></div></div></nav>'),n.put("app/home/stats/stats.html",'<section class="stats"><div class="container-fluid"><div class="row"><div class="col-xs-12"><div class="panel panel-default stats-global"><div class="panel-heading"><div class="panel-title">Global stats<div class="btn-group pull-right" role="group"><button type="button" class="btn btn-default btn-xs" ng-class="{\'active\': vm.scale === 60000}" ng-click="vm.scale = 60000">1m</button> <button type="button" class="btn btn-default btn-xs" ng-class="{\'active\': vm.scale === 3600000}" ng-click="vm.scale = 3600000">1h</button> <button type="button" class="btn btn-default btn-xs" ng-class="{\'active\': vm.scale === 86400000}" ng-click="vm.scale = 86400000">1d</button></div></div></div><div class="panel-body"><div class="row"><div class="stats-global-item col-sm-6">Count of requests: <span ng-bind="vm.global.rq_count"></span></div><div class="stats-global-item col-sm-6">Received: <span ng-bind="vm.global.kbytes_received"></span>kb / Sent: <span ng-bind="vm.global.kbytes_sent"></span>kb</div></div><div class="row"><div class="stats-global-item col-sm-6">Stop orders: <span ng-bind="vm.global.stop_order_count"></span></div><div class="stats-global-item col-sm-6">Requests before stop (min/avg/max): <span ng-if="vm.global.rq_before_stop"><span ng-bind="vm.global.rq_before_stop.min"></span> / <span ng-bind="vm.global.rq_before_stop.avg"></span> / <span ng-bind="vm.global.rq_before_stop.max"></span></span> <span ng-if="!vm.global.rq_before_stop">none</span></div></div></div></div></div><div class="col-xs-12"><div class="panel panel-default"><div class="panel-heading"><div class="panel-title">Requests</div></div><div class="panel-body"><timechart columns="vm.requests.columns" data="vm.requests.data"></timechart></div></div></div><div class="col-xs-12"><div class="panel panel-default"><div class="panel-heading"><div class="panel-title">Flow</div></div><div class="panel-body"><timechart columns="vm.flow.columns" data="vm.flow.data"></timechart></div></div></div></div></div></section>'),n.put("app/home/instances/instance/instance.html",'<div class="instance"><div class="instance-info"><div class="instance-name" ng-bind="vm.container.content.name"></div><div class="instance-address" ng-bind="vm.container.content.address | address"></div><div class="instance-icons"><div class="instance-type"><i class="icon" ng-class="vm.getCloudType(vm.container.content.type)"></i></div><div class="instance-status"><i class="icon" ng-class="vm.getStatus(vm.container.content.status)"></i></div><div class="instance-alive"><i class="icon" ng-class="vm.isAlive(vm.container.content.alive)"></i></div></div></div><div class="instance-button" ng-click="vm.kill()"><i class="icon icon-stopped"></i></div></div>'),n.put("app/home/instances/scaling/scaling.html",'<div class="modal-container scaling"><div class="modal-header"><h3 class="modal-title">Update scaling</h3></div><div class="modal-body"><form class="form-inline" name="scalingForm"><div class="form-group" ng-class="{\'has-error\': scalingForm.scalingMin.$invalid}"><label for="scalingMin">Min:</label> <input type="number" class="form-control" id="scalingMin" name="scalingMin" ng-model="vm.scaling.min" required=""></div><div class="form-group" ng-class="{\'has-error\': scalingForm.scalingRequired.$invalid}"><label for="scalingRequired">Required:</label> <input type="number" class="form-control" id="scalingRequired" name="scalingRequired" ng-model="vm.scaling.required" scaling-validator="" scmin="vm.scaling.min" scmax="vm.scaling.max" required=""></div><div class="form-group" ng-class="{\'has-error\': scalingForm.scalingMax.$invalid}"><label for="scalingMax">Max:</label> <input type="number" class="form-control" id="scalingMax" name="scalingMax" ng-model="vm.scaling.max" required=""></div><div class="help-block has-error" ng-messages="scalingForm.$error" ng-show="scalingForm.$invalid"><div ng-message="required">All fields are required</div><div ng-message="scmin">Required must be less or equal than Min</div><div ng-message="scmax">Required must be greater or equal than Max</div></div></form></div><div class="modal-footer"><button class="btn btn-primary" type="button" ng-click="vm.ok()" ng-disabled="scalingForm.$invalid">Update</button> <button class="btn btn-warning" type="button" ng-click="vm.cancel()">Cancel</button></div></div>')}]);